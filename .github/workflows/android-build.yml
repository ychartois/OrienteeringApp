name: Android Build

on:
  # Trigger the workflow based on different events
  push:
    branches:
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/android-build.yml'
    tags:
      - 'v*.*.*'
  
  # Allow manual triggering of the workflow
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build type (development, preview, production)'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - preview
          - production

jobs:
  determine-build-type:
    runs-on: ubuntu-latest
    outputs:
      build_type: ${{ steps.set-build-type.outputs.build_type }}
    steps:
      - id: set-build-type
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "build_type=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/heads/develop ]]; then
            echo "build_type=development" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == workflow_dispatch ]]; then
            echo "build_type=${{ github.event.inputs.buildType }}" >> $GITHUB_OUTPUT
          else
            echo "build_type=development" >> $GITHUB_OUTPUT
          fi

  build-android:
    needs: determine-build-type
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install dependencies
        run: npm install
      
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Build Android App
        run: |
          BUILD_TYPE="${{ needs.determine-build-type.outputs.build_type }}"
          echo "Building $BUILD_TYPE version..."
          npx eas-cli build --platform android --profile $BUILD_TYPE --non-interactive --no-wait
      
      - name: Get Build URL
        id: get-build-url
        run: |
          echo "Check your build status at https://expo.dev/accounts/[your-account]/projects/OrienteeringApp/builds"
          echo "Once complete, download the app from the Expo dashboard or configure EAS Update for over-the-air updates."
      
      - name: Output Build Info
        run: |
          BUILD_TYPE="${{ needs.determine-build-type.outputs.build_type }}"
          echo "::notice::Android $BUILD_TYPE build started. Visit the Expo dashboard to monitor and download the build."

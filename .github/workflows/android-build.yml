name: Android Build

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/android-build.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        working-directory: frontend
        run: npm install --legacy-peer-deps

      - name: Install Expo CLI
        working-directory: frontend
        run: npm install -g expo-cli

      - name: Create app icons
        working-directory: frontend
        run: |
          mkdir -p src/assets
          # Generate a simple placeholder icon using Node.js
          node -e "
            const fs = require('fs');
            const path = require('path');
            
            // Read the existing icon file from assets directory if it exists
            // Otherwise use a default empty buffer
            let iconData;
            try {
              iconData = fs.readFileSync(path.join('assets', 'icon.png'));
            } catch (e) {
              // Create a minimal 1x1 transparent PNG
              iconData = Buffer.from('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=', 'base64');
            }
            
            // Write the icon files needed for Android build
            fs.writeFileSync(path.join('src', 'assets', 'icon.png'), iconData);
            fs.writeFileSync(path.join('src', 'assets', 'adaptive-icon.png'), iconData);
            fs.writeFileSync(path.join('src', 'assets', 'splash.png'), iconData);
            fs.writeFileSync(path.join('src', 'assets', 'favicon.png'), iconData);
          "

      - name: Generate native Android project
        working-directory: frontend
        run: npx expo prebuild --platform android --clean

      - name: Build Android APK
        working-directory: frontend/android
        run: ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: frontend/android/app/build/outputs/apk/release/app-release.apk